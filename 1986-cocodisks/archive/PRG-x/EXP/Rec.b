PROCEDURE RecoverTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; bal(32):REAL; file:BYTEPARAM g:GlobalDIM I,J,K,New:INTEGERDIM Pred,Succ:INTEGERK=SIZE(g.Trx)+4INPUT "New Name: ",a$CREATE #New,a$:WRITESEEK #g.file,SIZE(g.Trx)GET #g.file,g.Recg.Avail=SIZE(g)SEEK #New,g.AvailSucc=KON ERROR GOTO 100REPEAT 50 SEEK #g.file,g.RecGET #g.file,g.TrxPRINT  \ PRINT RUN datestr(g.Trx.Key,a$)PRINT "Key: "; g.Trx.Key,a$PRINT "Desc: "; g.Trx.DescPRINT "Amt: "; g.Trx.AmtPRINT "DB: "; g.Name(g.Trx.DB)PRINT "CR: "; g.Name(g.Trx.CR)PUT #New,g.TrxPred=Succ-KSucc=g.Avail+KPUT #New,SuccPUT #New,Predg.Avail=g.Avail+KGET #g.file,g.RecUNTIL g.Rec<=075 SEEK #New,g.Avail-4g.Head=SIZE(g)g.Tail=g.Avail-Kg.Rec=0PUT #New,g.RecFOR I=1 TO 32g.bal(I)=0NEXT ISEEK #New,0PUT #New,gCLOSE #NewEND 100 PRINT "Error #"; ERRINPUT "Next record (relative; 0 to quit): ",JIF J=0 THEN 75g.Rec=g.Rec+J*KGOTO 50