PROCEDURE EntryTYPE Detail=Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Trans=Key:INTEGER; det:DetailTYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTETYPE XYPos=Ctrl,X,Y:BYTEPARAM G:GlobalDIM Tx:TransDIM Crsr:XYPosDIM Field,Out,EEOS:BYTEDIM Move,Mode,Ptr:INTEGERDIM Sy:BYTE; Sr:INTEGER; SBal(32):REAL; STrx:TransCrsr.Ctrl=2 \Crsr.Y=1 \EEOS=11Mode=0 \Move=0 \Out=1 \Field=1REPEAT ON Mode GOSUB 100,200,300,400IF Mode<3 AND Move<>0 THEN RUN PosFil(G,Move,0)ENDIF Crsr.Y=Crsr.Y+MoveIF Crsr.Y<$23 THEN Crsr.Y=$20 \Mode=1ENDIF IF Crsr.Y>$36 THEN Crsr.Y=$2C \Mode=1ENDIF IF Mode>0 THEN Sy=Crsr.Y \Sr=G.Rec \SBal=G.Bal \STrx=G.TrxCrsr.X=$20PUT #Out,CrsrIF Crsr.Y>$23 THEN PUT #Out,EEOSELSE Sy=$23ENDIF Move=1REPEAT RUN JLine(Out,Crsr.Y,G.Name,G.Bal,G.Trx)RUN PosFil(G,Move,0)Crsr.Y=Crsr.Y+MoveUNTIL Crsr.Y>$36 OR Move=0Crsr.Y=Sy \G.Rec=Sr \G.Bal=SBal \G.Trx=STrxENDIF Tx=G.TrxIF G.Rec=0 THEN Mode=4ELSE Mode=3ENDIF RUN EditTx(Field,Crsr,Mode,Move,G.Name,G.Bal,Tx)UNTIL Mode<0END 100 (* UpdateSEEK #G.File,G.Rec+2PUT #G.File,Tx.detG.Trx.det=Tx.detRETURN 200 (* DeleteRUN DelTx(G)RUN FreeTx(G.File,G.Avail,G.Rec)RETURN 300 (* MovePtr=G.RecRUN DelTx(G)G.Trx.det.Amt=0RUN PosFil(G,1,0)Move=0RUN PosFil(G,Move,Tx.Key)RUN AddTx(G,Tx,Ptr)RETURN 400 (* InsertRUN NewTx(G.File,G.Avail,Ptr)Move=0RUN PosFil(G,Move,Tx.Key)RUN AddTx(G,Tx,Ptr)RETURN PROCEDURE EditTxTYPE Trans=Time:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Ctl=Code,X,Y:BYTEPARAM Field:BYTEPARAM Crsr:CtlPARAM Mode,Move:INTEGERPARAM Names(32):STRING[13]PARAM Balance(32):REALPARAM Tx:TransDIM Col(5):BYTEDIM MNam(5):STRINGDIM key,Out:BYTEDIM i,Mode1:INTEGERDIM V:REALON ERROR GOTO 100Out=1Mode1=Mode \Mode=0FOR i=1 TO 5 \ READ Col(i) \NEXT iFOR i=1 TO 5 \ READ MNam(i) \NEXT iLOOP 100 Crsr.X=$20PUT #1,CrsrRUN JLine(Out,Crsr.Y,Names,Balance,Tx)PRINT CHR$(1); CHR$(4); MNam(Mode+1)Crsr.X=Col(Field)PUT #1,CrsrRUN GetKey(key)IF key=13 THEN PRINT "***"; PUT #1,CrsrINPUT "",a$IF a$>"" THEN ON Field GOSUB 1100,1300,1400,1500,1600ENDIF ENDIF IF key=8 AND Field>1 THEN Field=Field-1ENDIF IF key=9 AND Field<5 THEN Field=Field+1ENDIF EXITIF key=12 THEN Move=-1ENDEXIT EXITIF key=10 THEN Move=1ENDEXIT IF key=233 THEN Mode1=4ENDIF EXITIF key=228 THEN Mode=2ENDEXIT EXITIF key=241 THEN Mode=-1ENDEXIT EXITIF key=$20 THEN Mode=0ENDEXIT EXITIF key=28 THEN Move=-8ENDEXIT EXITIF key=26 THEN Move=8ENDEXIT ENDLOOP IF Tx.Time=$7FFF AND Mode>0 THEN Mode=0ENDIF END 1100 RUN DateNum(a$,i)IF i>0 AND i<>Tx.Time THEN Tx.Time=iMode=Mode1ENDIF RETURN 1300 IF a$<>Tx.Desc THEN Tx.Desc=a$GOTO 1650ENDIF RETURN 1400 V=VAL(a$)IF V<>Tx.Amt THEN Tx.Amt=VGOTO 1650ENDIF RETURN 1500 i=VAL(a$)IF i>0 AND i<33 AND i<>Tx.DB THEN Tx.DB=iGOTO 1650ENDIF RETURN 1600 i=VAL(a$)IF i>0 AND i<33 AND i<>Tx.CR THEN Tx.CR=i1650 IF Mode<1 THEN Mode=1ENDIF ENDIF RETURN DATA 32,44,58,66,88DATA "","UPDATE","DELETE","MOVE","INSERT"PROCEDURE GetKeyTYPE Registers=cc,a,b,dp:BYTE; x,y,u:INTEGERDIM regs:RegistersPARAM k:BYTEDIM o(32):BYTEregs.a=0regs.b=0regs.x=ADDR(o)RUN syscall($8D,regs)o(5)=0RUN syscall($8E,regs)GET #0,ko(5)=1RUN syscall($8E,regs)PROCEDURE NewTxPARAM File:BYTE; Avail:INTEGERPARAM Ptr:INTEGERPtr:=AvailSEEK #File,AvailIF EOF(#File) THEN Avail=Avail+22+2*SIZE(Ptr)ELSE GET #File,AvailENDIF PROCEDURE FreeTxPARAM File:BYTE; Avail:INTEGERPARAM Ptr:INTEGERDIM p:INTEGERp=Ptr+22SEEK #File,pGET #File,PtrSEEK #File,pPUT #File,AvailAvail=p-22PROCEDURE AddTxTYPE Detail=Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Trans=Key:INTEGER; Det:DetailTYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTEPARAM G:GlobalPARAM Tx:TransPARAM Ptr:INTEGERDIM Pred,Succ:INTEGERSucc=G.RecRUN Point(TRUE,G.File,2,G.Rec,Pred)SEEK #G.File,PtrPUT #G.File,Tx \ PUT #G.File,Succ \ PUT #G.File,PredG.Rec=PtrG.Trx=TxRUN Point(FALSE,G.File,1,Pred,Ptr)RUN Point(FALSE,G.File,2,Succ,Ptr)PROCEDURE DelTxTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTEPARAM G:GlobalDIM pred,Succ:INTEGERRUN point(TRUE,G.File,1,G.Rec,Succ)RUN point(TRUE,G.File,2,G.Rec,pred)RUN point(FALSE,G.File,1,pred,Succ)RUN point(FALSE,G.File,2,Succ,pred)