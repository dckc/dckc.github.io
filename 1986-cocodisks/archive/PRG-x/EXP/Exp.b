PROCEDURE ExpensesTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTEDIM Choice,LAST:BYTEDIM G:GlobalDIM A,b,c,d:INTEGERLAST=5RUN Initialize(G)REPEAT PRINT CHR$(12); "Expenses -- by Dan Connolly"PRINT "<A> - Edit Accounts"PRINT "<E> - Journal Entry"PRINT "<R> - Generate Report"PRINT "<C> - Clean up file"PRINT "<Q> - Quit"RUN Choose("Choice: ","AERCQ",Choice)IF Choice>0 AND Choice<LAST THEN RESTORE FOR A=1 TO ChoiceREAD a$NEXT ARUN a$(G)KILL a$ENDIF UNTIL Choice=5RUN Terminate(G)DATA "AcctNames","Entry","Report","Recover"PROCEDURE InitializeTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTEPARAM G:GlobalDIM Choice:BYTEDIM FileName:STRING[80]DIM Save:INTEGERSHELL "ex tmode .1 -pause quit=0"PRINT CHR$(12); "Expenses"PRINT "by Dan Connolly"10 (* Open Datafile *)PRINT INPUT "Name of DataFile: ",FileNameON ERROR GOTO 100OPEN #Save,FileName:UPDATEGET #Save,GG.File=SaveEND 100 (* Process bad open *)Save=ERRIF Save=216 OR Save=215 THEN  \(* Create new data fileRUN Choose("File not found. Create it? ","YN",Choice)IF Choice=1 THEN CREATE #G.File,FileNameG.Head=0G.Rec=G.Head \G.Tail=G.HeadG.Avail=SIZE(G)FOR Save=1 TO 32G.Name(Save)=""G.Bal(Save)=0NEXT SaveG.Trx.Key=$7FFF \G.Trx.Desc="" \G.Trx.Amt=0G.Trx.DB=1 \G.Trx.CR=1PUT #G.File,GEND ELSE GOTO 10ENDIF ELSE STOP "Fatal Error #"; SaveENDIF PROCEDURE TerminateTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; CR,DB:BYTETYPE Global=Trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTEPARAM G:GlobalSEEK #G.File,SIZE(G.Trx)GET #G.File,G.HeadGET #G.File,G.TailSEEK #G.File,0PUT #G.File,GPRINT "Path Number: "; G.FileCLOSE #G.FileSHELL "ex tmode pause quit=5"PROCEDURE JLineTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTEPARAM path,Line:BYTEPARAM Name(32):STRING[13]PARAM Bal(32):REALPARAM Tx:TransDIM Min,Max:BYTEDIM Date:STRING[11]DIM B1,B2:REALIF path=1 THEN Min=$23 \Max=$36ELSE Min=4 \Max=60ENDIF IF Line<Min OR Line>Max THEN IF Line>Max OR path=1 THEN PRINT #path,CHR$(12); ENDIF PRINT #pathPRINT #path,"Date        Description   Amount  Source Name   Src Bal Dest Name     Dest Bal"PRINT #path,"----------- ------------- ------- ------------- ------- ------------- --------"Line=MinENDIF RUN DateStr(Tx.Key,Date)IF Tx.DB>32 THEN Tx.DB=1ENDIF B1=Bal(Tx.DB)-Tx.AmtB2=Bal(Tx.CR)+Tx.AmtPRINT #path USING "s11,3(x1,s13,r8.2>)",Date,Tx.Desc,Tx.Amt,Name
(Tx.DB),B1,Name(Tx.CR),B2PROCEDURE PosFilTYPE Detail=Desc:STRING[13]; Amt:REAL; DB,CR:BYTETYPE Trans=Key:INTEGER; det:DetailTYPE Global=trx:Trans; Head,Tail,Rec,Avail:INTEGER; Name(32):STRING
[13]; Bal(32):REAL; File:BYTEPARAM G:GlobalPARAM Move,Time:INTEGERDIM Ptr,Tim,Count,Sign:INTEGERCount=0IF Time=0 THEN Sign=SGN(Move)IF Sign>0 THEN Time=32766ENDIF ELSE IF Time>G.trx.Key THEN Sign=1ELSE Sign=-1ENDIF ENDIF Ptr=1REPEAT Move=Move-SignIF Sign<0 THEN RUN Point(TRUE,G.File,2,G.Rec,Ptr)IF Ptr>0 THEN SEEK #G.File,PtrGET #G.File,TimENDIF IF Tim<Time THEN Ptr=0ENDIF IF Ptr>0 THEN G.Rec=Ptr \G.trx.Key=TimGET #G.File,G.trx.detRUN Tally(G.trx,G.Bal,-1)ENDIF ELSE IF G.trx.Key>Time THEN Ptr=0ELSE RUN Tally(G.trx,G.Bal,1)RUN Point(TRUE,G.File,1,G.Rec,G.Rec)IF G.Rec>0 THEN SEEK #G.File,G.RecGET #G.File,G.trxELSE G.trx.Key=$7FFFENDIF ENDIF ENDIF IF Ptr>0 THEN Count=Count+SignENDIF UNTIL Move=0 OR Ptr=0Move=CountPROCEDURE PointPARAM In:BOOLEANPARAM path:BYTEPARAM Mode:INTEGERPARAM Here,There:INTEGERDIM Ptr:INTEGERIF Mode=1 THEN Ptr=Here+22ELSE Ptr=Here+22+SIZE(Ptr)ENDIF SEEK #path,PtrIF In THEN IF EOF(#path) THEN In=FALSEELSE GET #path,ThereENDIF ELSE PUT #path,ThereENDIF PROCEDURE TallyTYPE Trans=Key:INTEGER; Desc:STRING[13]; Amt:REAL; DB,CR:BYTEPARAM Tx:TransPARAM Bal(32):REALPARAM Mult:INTEGERBal(Tx.DB)=Bal(Tx.DB)-Mult*Tx.AmtBal(Tx.CR)=Bal(Tx.CR)+Mult*Tx.AmtPROCEDURE ChoosePARAM Prompt:STRING[80]; Set:STRING; Num:BYTEDIM Resp:STRING[1]REPEAT PRINT Prompt; INPUT "",RespIF Resp>"Z" THEN Resp=CHR$(ASC(Resp)-32)ENDIF Num=SUBSTR(Resp,Set)UNTIL Resp>"" AND Num>0PROCEDURE DateNumPARAM Name:STRINGPARAM Date:INTEGERDIM Year,Month,Day,Indx:INTEGERON ERROR GOTO 100Month=VAL(MID$(Name,1,2))-1Day=VAL(MID$(Name,4,2))-1IF LEN(Name)>=7 THEN Year=VAL(MID$(Name,7,2))-86ELSE Year=1ENDIF IF LEN(Name)>=11 THEN Indx=VAL(MID$(Name,10,2))-1ELSE Indx=10ENDIF IF Month<0 OR Month>11 OR Day<0 OR Day>30 OR Indx<0 OR Indx>31 THEN
100 Date=-1END ENDIF Date=Indx+32*(Day+31*(Month+12*Year))PROCEDURE DateStrPARAM Key:INTEGERPARAM Name:STRINGDIM Year,Month,Day,Indx:INTEGERDIM Copy:INTEGERIndx=MOD(Key,32)+1 \Copy=Key/32Day=MOD(Copy,31)+1 \Copy=Copy/31Month=MOD(Copy,12)+1 \Copy=Copy/12Year=86+CopyName=RIGHT$(" "+STR$(Month),2)+"-"+RIGHT$("0"+STR$(Day),2)+"-"+STR$
(Year)+":"+RIGHT$(" "+STR$(Indx),2)